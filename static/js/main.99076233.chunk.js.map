{"version":3,"sources":["components/SmartMeteo/DumbMeteoWrapper.js","utils/logger.js","components/SmartMeteo/SmartMeteoWrapper.js","components/AppRoot/AppRoot.js","index.js"],"names":["useStyles","makeStyles","fab","margin","top","right","bottom","left","position","paper","padding","SearchAutocomplete","props","filterOptions","createFilterOptions","limit","ignoreCase","ignoreAccents","Autocomplete","defaultValue","label","options","list","map","el","onInputChange","handleChange","selectOnFocus","handleHomeEndKeys","freeSolo","renderInput","params","TextField","variant","InputProps","startAdornment","InputAdornment","MeteoText","renderText","rainLevel","rainLevelText","timeBeforeRain","Typography","component","gutterBottom","MeteoChart","RenderCustomAxisTick","x","y","payload","value","transform","dy","textAnchor","fill","RenderCustomTooltip","length","niveauPluie","Card","CardContent","width","height","data","chartData","type","dataKey","stroke","fillOpacity","isAnimationActive","tickMargin","ticks","tick","content","DumbMeteoWrapper","classes","Fragment","Box","display","flexDirection","my","Paper","className","elevation","searchCityList","searchDefaultValue","inputValue","searchInputValue","searchHandleChange","Hidden","mdUp","Fab","color","aria-label","onClick","fabHandleClick","loglevel","SmartMeteoWrapper","theme","defaultCity","id","useState","currentCity","setCurrentCity","displayedCity","setDisplayedCity","cityList","setCityList","setRainLevel","setTimeBeforeRain","setChartData","useEffect","citySearch","a","cityFetch","fetchResult","log","error","cityListUpdate","meteoUpdate","useCallback","cityId","meteoFetch","meteoResult","find","indexOf","API_URL","process","fetch","ok","json","jsonResult","jsonTransformed","nomAffiche","split","pop","join","Error","processJsonForChart","timeStr","niveauPluieText","hourStartStr","minutesStartStr","startDate","Date","setHours","setMinutes","jsonChart","dataCadran","index","newEl","m","startDateCopy","getTime","setTime","hours","getHours","getMinutes","document","title","event","foundCity","toLowerCase","getElementsByClassName","focus","createMuiTheme","typography","fontFamily","responsiveFontSizes","root","breakpoints","down","marginTop","up","AppRoot","ThemeProvider","CssBaseline","Container","maxWidth","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99076233.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, TextField, Typography, Fab, Hidden, InputAdornment, Card, CardContent, Paper } from '@material-ui/core';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nconst useStyles = makeStyles({\r\n    fab: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    },\r\n    paper: {\r\n        padding: 15\r\n    }\r\n});\r\n\r\nfunction DumbMeteoWrapper(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box display=\"flex\" flexDirection=\"column\">\r\n                <Box my={1}>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <SearchAutocomplete\r\n                            list={props.searchCityList}\r\n                            defaultValue={props.searchDefaultValue}\r\n                            inputValue={props.searchInputValue}\r\n                            handleChange={props.searchHandleChange}\r\n                            label=\"Ville\" />\r\n                    </Paper>\r\n                </Box>\r\n                <Box my={1}>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <MeteoText\r\n                            rainLevel={props.rainLevel}\r\n                            timeBeforeRain={props.timeBeforeRain}\r\n                        />\r\n                    </Paper>\r\n                </Box>\r\n                <Box my={1}>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <MeteoChart\r\n                            chartData={props.chartData}\r\n                        />\r\n                    </Paper>\r\n                </Box>\r\n                <Hidden mdUp>\r\n                    <Fab color=\"primary\" aria-label=\"search\" className={classes.fab} onClick={props.fabHandleClick}>\r\n                        <SearchIcon />\r\n                    </Fab>\r\n                </Hidden>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction SearchAutocomplete(props) {\r\n\r\n    const filterOptions = createFilterOptions({\r\n        limit: 25,\r\n        ignoreCase: true,\r\n        ignoreAccents: true,\r\n    });\r\n\r\n    return (\r\n        <Autocomplete\r\n            defaultValue={props.defaultValue.label}\r\n            options={props.list.map(el => el.label)}\r\n\r\n            onInputChange={props.handleChange}\r\n            selectOnFocus\r\n            handleHomeEndKeys\r\n\r\n            freeSolo\r\n            filterOptions={filterOptions}\r\n            renderInput={(params) =>\r\n                <TextField {...params} label={props.label} variant=\"outlined\"\r\n                    InputProps={{\r\n                        ...params.InputProps, startAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                        )\r\n                    }} />}\r\n        />\r\n    );\r\n}\r\n\r\nfunction MeteoText(props) {\r\n\r\n    let renderText;\r\n\r\n    if (props.rainLevel > 0) {\r\n\r\n        let rainLevelText;\r\n        switch (props.rainLevel) {\r\n            case 1:\r\n                rainLevelText = \"faible\"\r\n                break;\r\n            case 2:\r\n                rainLevelText = \"modérée\"\r\n                break;\r\n            case 3:\r\n                rainLevelText = \"forte\"\r\n                break;\r\n            default:\r\n                rainLevelText = \"torrentielle\"\r\n                break;\r\n        }\r\n        renderText = `Attention pluie ${rainLevelText} prévue dans ${props.timeBeforeRain} minutes ! 🌧️`;\r\n    } else {\r\n        renderText = \"Vous pouvez sortir sans risque ! 😎\";\r\n    }\r\n\r\n    const shouldRender = props.rainLevel > -1;\r\n\r\n    if (shouldRender) {\r\n        return (\r\n            < Typography variant=\"h2\" component=\"h1\" gutterBottom >\r\n                {renderText}\r\n            </Typography >\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nfunction MeteoChart(props) {\r\n\r\n    const RenderCustomAxisTick = ({ x, y, payload }) => {\r\n        let renderText;\r\n\r\n        switch (payload.value) {\r\n            case 0:\r\n                renderText = \"Pas de Pluie\"\r\n\r\n                break;\r\n            case 1:\r\n                renderText = \"Faible\"\r\n\r\n                break;\r\n            case 2:\r\n                renderText = \"Modérée\"\r\n\r\n                break;\r\n            case 3:\r\n                renderText = \"Forte\"\r\n                break;\r\n            default:\r\n                renderText = \"Pas d'info\";\r\n        }\r\n\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={0} y={0} dy={0} textAnchor=\"end\" fill=\"#666\" >{renderText}</text>\r\n            </g>\r\n        );\r\n    };\r\n\r\n    const myTicks = [0, 1, 2, 3];\r\n\r\n    const RenderCustomTooltip = (props) => {\r\n        let renderText;\r\n\r\n        if (props && props.payload && props.payload.length) {\r\n            const realPayload = props?.payload[0].payload;\r\n            switch (realPayload.niveauPluie) {\r\n                case 0:\r\n                    renderText = `Pas de pluie prévue.`;\r\n                    break;\r\n                case 1:\r\n                    renderText = `Pluie faible prévue.`;\r\n                    break;\r\n                case 2:\r\n                    renderText = `Pluie modérée prévue.`;\r\n                    break;\r\n                case 3:\r\n                    renderText = `Pluie forte prévue.`;\r\n                    break;\r\n                default:\r\n                    renderText = `Pluie torrentielle prévue.`;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Card >\r\n                <CardContent>\r\n                    <Typography variant=\"body1\">\r\n                        {renderText}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <AreaChart\r\n                height={200}\r\n                width={500}\r\n                data={props.chartData}\r\n            >\r\n                <Area type=\"monotone\" dataKey=\"niveauPluie\" stroke=\"#3f51b5\" fill=\"#3f51b5\" fillOpacity={0.8} isAnimationActive={true} />\r\n                <XAxis dataKey=\"hours\" />\r\n                <YAxis width={90} tickMargin={5} ticks={myTicks} tick={<RenderCustomAxisTick />} />\r\n                <Tooltip content={<RenderCustomTooltip />} />\r\n            </AreaChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default DumbMeteoWrapper; ","import * as loglevel from 'loglevel'\r\n\r\nif (process.env.NODE_ENV!=='production') {\r\n  loglevel.setLevel('debug')\r\n} else {\r\n  loglevel.setLevel('error')\r\n}\r\n\r\nexport default loglevel\r\n","import React from 'react';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport DumbMeteoWrapper from '../SmartMeteo/DumbMeteoWrapper';\r\nimport log from '../../utils/logger';\r\n\r\n\r\n/**\r\n * Orchestrate State for application\r\n */\r\nfunction SmartMeteoWrapper(props) {\r\n\r\n  const defaultCity = {\r\n    label: \"Rennes\",\r\n    id: 352380\r\n  }\r\n\r\n  const [currentCity, setCurrentCity] = useState(defaultCity);\r\n  const [displayedCity, setDisplayedCity] = useState(currentCity);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [rainLevel, setRainLevel] = useState(-1);\r\n  const [timeBeforeRain, setTimeBeforeRain] = useState();\r\n\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n\r\n  /** \r\n   * Trigger when the search is updated\r\n  */\r\n  useEffect(() => {\r\n    if (currentCity.label.length === 2 || currentCity.label === defaultCity.label) {\r\n      cityListUpdate(currentCity.label);\r\n    }\r\n\r\n    async function cityListUpdate(citySearch) {\r\n      try {\r\n        const fetchResult = await cityFetch(citySearch);\r\n        setCityList(fetchResult);\r\n\r\n      } catch (error) {\r\n        log.error(error);\r\n        // setState on error\r\n      }\r\n    }\r\n\r\n  }, [currentCity, defaultCity.label]);\r\n\r\n  const meteoUpdate = useCallback(async (cityId) => {\r\n    try {\r\n      const meteoResult = await meteoFetch(cityId);\r\n\r\n      const rainLevel = meteoResult.find(el => el.niveauPluie > 0);\r\n\r\n      if(rainLevel){\r\n        const timeBeforeRain = meteoResult.indexOf(rainLevel) * 5;\r\n        setRainLevel(rainLevel.niveauPluie);\r\n        setTimeBeforeRain(timeBeforeRain);  \r\n      } else {\r\n        setRainLevel(0);\r\n      }\r\n      \r\n      setChartData(meteoResult);\r\n\r\n    } catch (error) {\r\n      log.error(error);\r\n      // setState on error\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Triggered when cityDisplayed update and text and graph should update\r\n   */\r\n  useEffect(() => {\r\n    document.title = `${displayedCity.label}`;\r\n\r\n    meteoUpdate(displayedCity.id);\r\n\r\n  }, [displayedCity, meteoUpdate]);\r\n\r\n\r\n\r\n\r\n  function searchHandleChange(event, value) {\r\n    const foundCity = cityList.find(el => el.label.toLowerCase() === value.toLowerCase());\r\n\r\n    if (foundCity) {\r\n      setCurrentCity(foundCity);\r\n      setDisplayedCity(foundCity);\r\n    } else {\r\n      const newCity = {\r\n        label: value\r\n      }\r\n      setCurrentCity(newCity);\r\n    }\r\n  }\r\n\r\n  async function cityFetch(citySearch) {\r\n    const API_URL = `${process.env.REACT_APP_API_HOST}/http://www.meteofrance.com/mf3-rpc-portlet/rest/lieu/facet/pluie/search`;\r\n    const fetchResult = await fetch(`${API_URL}/${citySearch}`);\r\n    if (fetchResult.ok) {\r\n      const jsonResult = await fetchResult.json();\r\n      const jsonTransformed = jsonResult.map(el => {\r\n        // Remove the postal code from city name\r\n        let label = el.nomAffiche.split(' ');\r\n        if (label.length > 1) {\r\n          label.pop()\r\n          label = label.join(' ');\r\n        };\r\n        return {\r\n          label: label,\r\n          id: el.id\r\n        }\r\n      });\r\n      return jsonTransformed;\r\n    } else {\r\n      throw new Error(\"Can't Fetch Search API\");\r\n    }\r\n  }\r\n\r\n  async function meteoFetch(cityId) {\r\n    const API_URL = `${process.env.REACT_APP_API_HOST}/http://www.meteofrance.com/mf3-rpc-portlet/rest/pluie`;\r\n    const fetchResult = await fetch(`${API_URL}/${cityId}`);\r\n    if (fetchResult.ok) {\r\n      const jsonResult = await fetchResult.json();\r\n      return processJsonForChart(jsonResult);\r\n    } else {\r\n      throw new Error(\"Can't Fetch Meteo API\");\r\n    }\r\n\r\n    // Transform the json result from meteo API to a \"chartable\" one\r\n    function processJsonForChart(json) {\r\n\r\n      function getTimePlusMinutes(item, m) {\r\n        return item.getTime() + (m * 60 * 1000);\r\n      }\r\n\r\n      const timeStr = json.niveauPluieText[0].split(' ')[0];\r\n      const hourStartStr = timeStr[2] + timeStr[3];\r\n      const minutesStartStr = timeStr[5] + timeStr[6];\r\n      let startDate = new Date();\r\n      startDate.setHours(hourStartStr);\r\n      startDate.setMinutes(minutesStartStr);\r\n\r\n      let jsonChart = json.dataCadran;\r\n      jsonChart = jsonChart.map((el, index) => {\r\n        let newEl = {};\r\n        if (el.niveauPluie === 0) {\r\n          newEl.niveauPluie = null;\r\n        } else {\r\n          newEl.niveauPluie = el.niveauPluie - 1\r\n        }\r\n\r\n        let startDateCopy = new Date(startDate.getTime());\r\n        startDateCopy.setTime(getTimePlusMinutes(startDate, 5 * index));\r\n\r\n        newEl.hours = `${startDateCopy.getHours()}:${(startDateCopy.getMinutes() < 10 ? '0' : '') + startDateCopy.getMinutes()}`;\r\n        return newEl;\r\n      });\r\n\r\n\r\n      return jsonChart;\r\n    }\r\n  }\r\n\r\n  function fabHandleClick() {\r\n    let muiInput = document.getElementsByClassName(\"MuiAutocomplete-input\")[0];\r\n    muiInput.focus();\r\n\r\n    const chartDataTest = [\r\n      {\r\n        hours: \"15:00\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:05\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:10\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:15\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:20\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:25\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:30\",\r\n        niveauPluie: null,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:35\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:40\",\r\n        niveauPluie: 4,\r\n        niveauPluieText: \"Précipitations fortes\"\r\n      },\r\n      {\r\n        hours: \"15:45\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      },\r\n      {\r\n        hours: \"15:50\",\r\n        niveauPluie: 0,\r\n        niveauPluieText: \"Données indisponibles\"\r\n      },\r\n      {\r\n        hours: \"15:55\",\r\n        niveauPluie: 1,\r\n        niveauPluieText: \"Pas de précipitations\"\r\n      }\r\n    \r\n    ];\r\n    setChartData(chartDataTest);\r\n    setRainLevel(3);\r\n    setTimeBeforeRain(15);\r\n  }\r\n\r\n  return (\r\n    <DumbMeteoWrapper\r\n      searchDefaultValue={defaultCity}\r\n      searchInputValue={currentCity}\r\n      searchCityList={cityList}\r\n      searchHandleChange={searchHandleChange}\r\n      rainLevel={rainLevel}\r\n      timeBeforeRain={timeBeforeRain}\r\n      chartData={chartData}\r\n      fabHandleClick={fabHandleClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SmartMeteoWrapper;","import React from 'react';\r\nimport { Container, Box, CssBaseline } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes, makeStyles } from '@material-ui/core/styles';\r\nimport SmartMeteoWrapper from '../SmartMeteo/SmartMeteoWrapper';\r\n\r\nlet theme;\r\n// let theme = createMuiTheme();\r\n\r\ntheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      'Quicksand',\r\n      'Roboto'\r\n    ].join(','),\r\n  },\r\n});\r\n\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: 0,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      marginTop: 16 * 3,\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nfunction AppRoot() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n        {/* // Wrap all application (for background usage later) */}\r\n        <Container maxWidth={false}>\r\n          {/* Wrap all app content */}\r\n          <Box className={classes.root}>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n              <SmartMeteoWrapper />\r\n            </Container>\r\n          </Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AppRoot;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRoot from './components/AppRoot/AppRoot';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppRoot />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}