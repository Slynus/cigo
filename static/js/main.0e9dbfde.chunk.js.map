{"version":3,"sources":["components/SmartMeteo/DumbMeteoWrapper.js","utils/logger.js","components/SmartMeteo/SmartMeteoWrapper.js","components/AppRoot/AppRoot.js","index.js"],"names":["useStyles","makeStyles","fab","margin","top","right","bottom","left","position","SearchAutocomplete","props","filterOptions","createFilterOptions","limit","ignoreCase","ignoreAccents","Autocomplete","defaultValue","label","options","list","map","el","onInputChange","handleChange","selectOnFocus","handleHomeEndKeys","freeSolo","renderInput","params","TextField","variant","InputProps","startAdornment","InputAdornment","MeteoText","Typography","component","gutterBottom","text","MeteoChart","width","height","data","chartData","type","dataKey","stroke","isAnimationActive","tickMargin","DumbMeteoWrapper","classes","Fragment","Box","display","flexDirection","my","searchCityList","searchDefaultValue","inputValue","searchInputValue","searchHandleChange","meteoText","Hidden","mdUp","Fab","color","aria-label","className","onClick","fabHandleClick","loglevel","chartDataDefault","hours","niveauPluie","niveauPluieText","chartDataDefaultV2","SmartMeteoWrapper","defaultCity","id","useState","currentCity","setCurrentCity","displayedCity","setDisplayedCity","cityList","setCityList","setMeteoText","setChartData","useEffect","citySearch","a","cityFetch","fetchResult","log","error","length","cityListUpdate","meteoUpdate","useCallback","cityId","meteoFetch","meteoResult","API_URL","process","fetch","ok","json","jsonResult","jsonTransformed","nomAffiche","split","pop","join","Error","processJsonForChart","timeStr","hourStartStr","minutesStartStr","startDate","Date","setHours","setMinutes","jsonChart","dataCadran","index","newEl","m","startDateCopy","getTime","setTime","getHours","getMinutes","levelPluie","document","title","event","value","foundCity","find","toLowerCase","debug","theme","createMuiTheme","responsiveFontSizes","AppRoot","ThemeProvider","Container","maxWidth","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.0e9dbfde.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, TextField, Typography, Fab, Hidden, InputAdornment } from '@material-ui/core';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nconst useStyles = makeStyles({\r\n    fab: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    }\r\n});\r\n\r\nfunction DumbMeteoWrapper(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box display=\"flex\" flexDirection=\"column\">\r\n                <Box my={1}>\r\n                    <SearchAutocomplete\r\n                        list={props.searchCityList}\r\n                        defaultValue={props.searchDefaultValue}\r\n                        inputValue={props.searchInputValue}\r\n                        handleChange={props.searchHandleChange}\r\n                        label=\"Ville\" />\r\n                </Box>\r\n                <Box my={1}>\r\n                    <MeteoText text={props.meteoText} />\r\n                </Box>\r\n                <Box my={1}>\r\n                    <MeteoChart\r\n                        chartData={props.chartData}\r\n                    />\r\n                </Box>\r\n                <Hidden mdUp>\r\n                    <Fab color=\"primary\" aria-label=\"search\" className={classes.fab} onClick={props.fabHandleClick}>\r\n                        <SearchIcon />\r\n                    </Fab>\r\n                </Hidden>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction SearchAutocomplete(props) {\r\n\r\n    const filterOptions = createFilterOptions({\r\n        limit: 25,\r\n        ignoreCase: true,\r\n        ignoreAccents: true,\r\n    });\r\n\r\n    return (\r\n        <Autocomplete\r\n            defaultValue={props.defaultValue.label}\r\n            options={props.list.map(el => el.label)}\r\n\r\n            onInputChange={props.handleChange}\r\n            selectOnFocus\r\n            handleHomeEndKeys\r\n\r\n            freeSolo\r\n            filterOptions={filterOptions}\r\n            renderInput={(params) =>\r\n                <TextField {...params} label={props.label} variant=\"outlined\"\r\n                    InputProps={{\r\n                        ...params.InputProps, startAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                        )\r\n                    }} />}\r\n        />\r\n    );\r\n}\r\n\r\nfunction MeteoText(props) {\r\n    return (\r\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\r\n            {props.text}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nfunction MeteoChart(props) {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart\r\n                height={200}\r\n                width={500}\r\n                data={props.chartData}\r\n            >\r\n                <Line type=\"monotone\" dataKey=\"niveauPluie\" stroke=\"#8884d8\" isAnimationActive={false}/>\r\n                <XAxis dataKey=\"hours\" />\r\n                <YAxis tickMargin={25} />\r\n                <CartesianGrid stroke=\"#ccc\" />\r\n                <Tooltip />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default DumbMeteoWrapper; ","import * as loglevel from 'loglevel'\r\n\r\nif (process.env.NODE_ENV!=='production') {\r\n  loglevel.setLevel('debug')\r\n} else {\r\n  loglevel.setLevel('error')\r\n}\r\n\r\nexport default loglevel\r\n","import React from 'react';\r\nimport { useState, useEffect,useCallback } from 'react';\r\nimport DumbMeteoWrapper from '../SmartMeteo/DumbMeteoWrapper';\r\nimport log from '../../utils/logger';\r\n\r\nconst chartDataDefault = [\r\n  {\r\n    hours: \"15:00\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:05\",\r\n    niveauPluie: 2,\r\n    niveauPluieText: \"Précipitations faibles\"\r\n  },\r\n  {\r\n    hours: \"15:10\",\r\n    niveauPluie: 3,\r\n    niveauPluieText: \"Précipitations modérées\"\r\n  },\r\n  {\r\n    hours: \"15:15\",\r\n    niveauPluie: 3,\r\n    niveauPluieText: \"Précipitations modérées\"\r\n  },\r\n  {\r\n    hours: \"15:20\",\r\n    niveauPluie: 2,\r\n    niveauPluieText: \"Précipitations faibles\"\r\n  },\r\n  {\r\n    hours: \"15:25\",\r\n    niveauPluie: 4,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:30\",\r\n    niveauPluie: null,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:35\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:40\",\r\n    niveauPluie: 4,\r\n    niveauPluieText: \"Précipitations fortes\"\r\n  },\r\n  {\r\n    hours: \"15:45\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:50\",\r\n    niveauPluie: 0,\r\n    niveauPluieText: \"Données indisponibles\"\r\n  },\r\n  {\r\n    hours: \"15:55\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  }\r\n];\r\n\r\nconst chartDataDefaultV2 = [\r\n  {\r\n    hours: \"15:00\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:05\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:10\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:15\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:20\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:25\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:30\",\r\n    niveauPluie: null,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:35\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:40\",\r\n    niveauPluie: 4,\r\n    niveauPluieText: \"Précipitations fortes\"\r\n  },\r\n  {\r\n    hours: \"15:45\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  },\r\n  {\r\n    hours: \"15:50\",\r\n    niveauPluie: 0,\r\n    niveauPluieText: \"Données indisponibles\"\r\n  },\r\n  {\r\n    hours: \"15:55\",\r\n    niveauPluie: 1,\r\n    niveauPluieText: \"Pas de précipitations\"\r\n  }\r\n\r\n];\r\n\r\n/**\r\n * Orchestrate State for application\r\n */\r\nfunction SmartMeteoWrapper(props) {\r\n\r\n  const defaultCity = {\r\n    label: \"Rennes\",\r\n    id: 352380\r\n  }\r\n\r\n  const texteSansPluie = \"Vous pouvez sortir sans risque ! 😎\";\r\n  const texteAvecPluie = \"Attention pluie prévue ! 🌧️\";\r\n\r\n  const [currentCity, setCurrentCity] = useState(defaultCity);\r\n  const [displayedCity, setDisplayedCity] = useState(currentCity);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [meteoText, setMeteoText] = useState();\r\n  const [chartData, setChartData] = useState(chartDataDefault);\r\n\r\n\r\n  /** \r\n   * Trigger when the search is updated\r\n  */\r\n  useEffect(() => {\r\n    if (currentCity.label.length === 2 || currentCity.label === defaultCity.label) {\r\n      cityListUpdate(currentCity.label);\r\n    }\r\n\r\n    async function cityListUpdate(citySearch) {\r\n      try {\r\n        const fetchResult = await cityFetch(citySearch);\r\n        setCityList(fetchResult);\r\n\r\n      } catch (error) {\r\n        log.error(error);\r\n        // setState on error\r\n      }\r\n    }\r\n\r\n  }, [currentCity, defaultCity.label]);\r\n\r\n  const meteoUpdate = useCallback(async (cityId)=> {\r\n    try {\r\n      const meteoResult = await meteoFetch(cityId);\r\n\r\n\r\n      // majMeteooText() //V2\r\n      // majGraph()\r\n\r\n      \r\n      if (meteoResult[0][1] > 1) {\r\n        setMeteoText(texteAvecPluie);\r\n      } else {\r\n        setMeteoText(texteSansPluie);\r\n      }\r\n\r\n      setChartData(meteoResult[1]);\r\n\r\n    } catch (error) {\r\n      log.error(error);\r\n      // setState on error\r\n    }\r\n  },[]);\r\n\r\n  /**\r\n   * Triggered when cityDisplayed update and text and graph should update\r\n   */\r\n  useEffect(() => {\r\n    document.title = `${displayedCity.label}`;\r\n\r\n    meteoUpdate(displayedCity.id);\r\n\r\n  }, [displayedCity,meteoUpdate]);\r\n\r\n\r\n\r\n\r\n  function searchHandleChange(event, value) {\r\n    const foundCity = cityList.find(el => el.label.toLowerCase() === value.toLowerCase());\r\n\r\n    if (foundCity) {\r\n      setCurrentCity(foundCity);\r\n      setDisplayedCity(foundCity);\r\n    } else {\r\n      const newCity = {\r\n        label: value\r\n      }\r\n      setCurrentCity(newCity);\r\n    }\r\n  }\r\n\r\n  async function cityFetch(citySearch) {\r\n    const API_URL = `${process.env.REACT_APP_API_HOST}/http://www.meteofrance.com/mf3-rpc-portlet/rest/lieu/facet/pluie/search`;\r\n    const fetchResult = await fetch(`${API_URL}/${citySearch}`);\r\n    if (fetchResult.ok) {\r\n      const jsonResult = await fetchResult.json();\r\n      const jsonTransformed = jsonResult.map(el => {\r\n        // Remove the postal code from city name\r\n        let label = el.nomAffiche.split(' ');\r\n        if (label.length > 1) {\r\n          label.pop()\r\n          label = label.join(' ');\r\n        };\r\n        return {\r\n          label: label,\r\n          id: el.id\r\n        }\r\n      });\r\n      return jsonTransformed;\r\n    } else {\r\n      throw new Error(\"Can't Fetch Search API\");\r\n    }\r\n  }\r\n\r\n  async function meteoFetch(cityId) {\r\n    const API_URL = `${process.env.REACT_APP_API_HOST}/http://www.meteofrance.com/mf3-rpc-portlet/rest/pluie`;\r\n    const fetchResult = await fetch(`${API_URL}/${cityId}`);\r\n    if (fetchResult.ok) {\r\n      const jsonResult = await fetchResult.json();\r\n      const levelPluie = jsonResult.dataCadran.map(el => el.niveauPluie);\r\n      const jsonTransformed = processJsonForChart(jsonResult);\r\n\r\n      return [levelPluie,jsonTransformed];\r\n    } else {\r\n      throw new Error(\"Can't Fetch Meteo API\");\r\n    }\r\n\r\n    // Transform the json result from meteo API to a \"chartable\" one\r\n    function processJsonForChart(json) {\r\n\r\n      function getTimePlusMinutes(item, m) {\r\n        return item.getTime() + (m * 60 * 1000);\r\n      }\r\n\r\n      const timeStr = json.niveauPluieText[0].split(' ')[0];\r\n      const hourStartStr = timeStr[2] + timeStr[3];\r\n      const minutesStartStr = timeStr[5] + timeStr[6];\r\n      let startDate = new Date();\r\n      startDate.setHours(hourStartStr);\r\n      startDate.setMinutes(minutesStartStr);\r\n\r\n      let jsonChart = json.dataCadran;\r\n      jsonChart = jsonChart.map((el,index) => {\r\n        let newEl = {};\r\n        if (el.niveauPluie === 0) {\r\n          newEl.niveauPluie = null;\r\n        } else {\r\n          newEl.niveauPluie = el.niveauPluie - 1\r\n        }\r\n\r\n        let startDateCopy = new Date(startDate.getTime());\r\n        startDateCopy.setTime(getTimePlusMinutes(startDate,5*index));\r\n\r\n        newEl.hours = `${startDateCopy.getHours()}:${(startDateCopy.getMinutes()<10?'0':'') + startDateCopy.getMinutes()}`;\r\n        return newEl;\r\n      });\r\n\r\n\r\n      return jsonChart;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function fabHandleClick() {\r\n    log.debug(\"é_é\");\r\n    setChartData(chartDataDefaultV2);\r\n  }\r\n\r\n  return (\r\n    <DumbMeteoWrapper\r\n      searchDefaultValue={defaultCity}\r\n      searchInputValue={currentCity}\r\n      searchCityList={cityList}\r\n      searchHandleChange={searchHandleChange}\r\n      meteoText={meteoText}\r\n      chartData={chartData}\r\n      fabHandleClick={fabHandleClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SmartMeteoWrapper;","import React from 'react';\r\nimport { Container, Box} from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport  SmartMeteoWrapper from '../SmartMeteo/SmartMeteoWrapper';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction AppRoot() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n\r\n      {/* // Wrap all application (for background usage later) */}\r\n      <Container maxWidth={false}>\r\n        {/* Wrap all app content */}\r\n        <Box my={6}>\r\n          <Container component=\"main\" maxWidth=\"md\">\r\n            <SmartMeteoWrapper />\r\n          </Container>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default AppRoot;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRoot from './components/AppRoot/AppRoot';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <AppRoot />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}